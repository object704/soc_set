<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ApplicationSonataUserBundleEntityMsgProxy extends \Application\Sonata\UserBundle\Entity\Msg implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getMsg()
    {
        $this->__load();
        return parent::getMsg();
    }

    public function setIdFrom($idFrom)
    {
        $this->__load();
        return parent::setIdFrom($idFrom);
    }

    public function getIdFrom()
    {
        $this->__load();
        return parent::getIdFrom();
    }

    public function setIdTo($idTo)
    {
        $this->__load();
        return parent::setIdTo($idTo);
    }

    public function getIdTo()
    {
        $this->__load();
        return parent::getIdTo();
    }

    public function setTema($tema)
    {
        $this->__load();
        return parent::setTema($tema);
    }

    public function getTema()
    {
        $this->__load();
        return parent::getTema();
    }

    public function setLetter($letter)
    {
        $this->__load();
        return parent::setLetter($letter);
    }

    public function getLetter()
    {
        $this->__load();
        return parent::getLetter();
    }

    public function setTime($time)
    {
        $this->__load();
        return parent::setTime($time);
    }

    public function getTime()
    {
        $this->__load();
        return parent::getTime();
    }

    public function setReader($reader)
    {
        $this->__load();
        return parent::setReader($reader);
    }

    public function getReader()
    {
        $this->__load();
        return parent::getReader();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'msg', 'idFrom', 'idTo', 'tema', 'letter', 'time', 'reader');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}